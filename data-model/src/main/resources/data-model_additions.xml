<?xml version="1.0"?>
<!-- This file details any extensions needed to the data model to store data from this source, everything else is automatically generated from the model description so this is all we need to do to add to the model. -->

<classes>
<!-- add any <class> elements here -->

    <!-- ****************** PUBLICATIONS **************************** -->
    <class name="Publication" is-interface="true">
	<!-- Augment core class. Add field for MGI#. (Many references from MGI have
	     no pubmedid, but all refs have a MGI#.) Also, J#, and citation (computed string).
	-->
	<attribute name="mgiId" type="java.lang.String" />
	<attribute name="mgiJnum" type="java.lang.String" />
	<attribute name="citation" type="java.lang.String" />
	<attribute name="abstractText" type="java.lang.String" />
	<collection name="expression" referenced-type="GXDExpression" reverse-reference="publication" />
        </class>

    <!-- ****************** GENOMIC STUFF *************************** -->
    <class name="Location" is-interface="true">
	<attribute name="assembly" type="java.lang.String"/>
	</class>

    <class name="BioEntity" is-interface="true">
	<!-- The core model defines this attribute in class Gene. We define it in the superclass because MGI 
             has descriptions for other feature types (e.g. QTL, Chrom translocations, ...). -->
	<attribute name="description" type="java.lang.String"/>
	<reference name="chromosomeLocation" referenced-type="Location" />
        <reference name="earliestPublication" referenced-type="Publication" />
        </class>

    <class name="SequenceFeature" extends="BioEntity" is-interface="true">
	<!-- Augment SO class. -->
	<attribute name="mgiType" type="java.lang.String"/>
	<attribute name="specificity" type="java.lang.String"/>
	<collection name="alleles" referenced-type="Allele" reverse-reference="feature" />
	<collection name="expression" referenced-type="GXDExpression" reverse-reference="feature"/>
	<collection name="genomicClusters" referenced-type="MGIClusterHasMember" reverse-reference="member"/>
	<collection name="involvedInMutations" referenced-type="MGIMutationInvolves" reverse-reference="feature"/>
	<collection name="transgenicExpressors" referenced-type="MGIExpressesComponent" reverse-reference="feature"/>
	<collection name="targets" referenced-type="MGIInteractsWith" reverse-reference="interactor"/>
	<collection name="targetedBy" referenced-type="MGIInteractsWith" reverse-reference="target"/>
	</class>

    <!-- To match MGI model, make GeneSegment a subclass of Gene. In the default SO model, GeneSegment is a 
         sibling of Gene, both under SequenceFeature.
	 -->
    <class name="GeneSegment" extends="Gene" is-interface="true"> </class>

    <!-- To match MGI model, make HeritablePhenotypcMarker a subclass of Gene. In the default SO model, it is a 
         sibling of Gene, both under SequenceFeature.
	 -->
    <class name="HeritablePhenotypicMarker" extends="Gene" is-interface="true"> </class>

    <!-- To match MGI model, we do NOT want PseudogenicGeneSegment to be a subclass of GeneSegment, which
         is how it is defined in the SO. Instead, it should be a subclass of PseudogenicRegion.
	 -->
    <class name="PseudogenicGeneSegment" extends="PseudogenicRegion" is-interface="true"> </class>

    <!-- =========================================================================
    The following feature types are not defined by the SO, so define them here.
    These are needed for importing some MCV types. Other MCV types are mapped
    to corresponding SO types.
    -->
    <class name="ComplexClusterRegion" extends="SequenceFeature" is-interface="true"> 
	<collection name="members" referenced-type="MGIClusterHasMember" reverse-reference="cluster" />
        </class>
    <class name="DNASegment" extends="SequenceFeature" is-interface="true"> </class>
    <class name="OtherGenomeFeature" extends="SequenceFeature" is-interface="true"> </class>

    <!--- No SO terms for these but they are in the MGI-Cannonical.gff file
    <class name="PseudogenicCDS" extends="PseudogenicRegion" is-interface="true"> </class>
    <class name="PseudogenicFivePrimeUTR" extends="PseudogenicRegion" is-interface="true"> </class>
    <class name="PseudogenicMRNA" extends="PseudogenicRegion" is-interface="true"> </class>
    <class name="PseudogenicStartCodon" extends="PseudogenicRegion" is-interface="true"> </class>
    <class name="PseudogenicStopCodon" extends="PseudogenicRegion" is-interface="true"> </class>
    <class name="PseudogenicThreePrimeUTR" extends="PseudogenicRegion" is-interface="true"> </class>
    -->
    <!--
    <class name="UnclassifiedCytogeneticMarker" extends="SequenceFeature" is-interface="true"> </class>
    <class name="UnclassifiedGene" extends="Gene" is-interface="true"> </class>
    <class name="UnclassifiedNcRNAGene" extends="NcRNAGene" is-interface="true"> </class>
    <class name="UnclassifiedOtherGenomeFeature" extends="SequenceFeature" is-interface="true"> </class>
    -->

    <!--=============================================================================-->
    <class name="ChromosomeStructureVariation" extends="SequenceFeature SequenceCollection" is-interface="true">
        </class>

    <class name="SyntenicRegion" extends="SequenceFeature" is-interface="true">
	<!-- Augment SO class. 
	    -->
	<reference name="syntenyBlock" referenced-type="SyntenyBlock" reverse-reference="syntenicRegions" />
	<attribute name="orientation" type="java.lang.String"/>
        </class>

    <class name="SyntenyBlock" is-interface="true">
        <collection name="syntenicRegions" referenced-type="SyntenicRegion" reverse-reference="syntenyBlock"/>
        <reference name="dataSet" referenced-type="DataSet"/>
        <reference name="publication" referenced-type="Publication"/>
        </class>


    <!-- ****************** HOMOLOGIES ****************************** 
    The following classes are the de facto Intermine standard for representing
    homology assertions. They are copied here from the entrez-compara source.
    -->
    <class name="Homologue" is-interface="true">
	<attribute name="type" type="java.lang.String"/> <!-- "orthology" or "parology" -->
	<reference name="gene" referenced-type="Gene" reverse-reference="homologues"/>
	<reference name="homologue" referenced-type="Gene"/>
	<collection name="dataSets" referenced-type="DataSet"/>
	<collection name="evidence" referenced-type="OrthologueEvidence"/>
	</class>
    <class name="OrthologueEvidence" is-interface="true">
	<reference name="evidenceCode" referenced-type="OrthologueEvidenceCode"/>
	<collection name="publications" referenced-type="Publication"/>
	</class>
    <class name="OrthologueEvidenceCode" is-interface="true">
	<attribute name="abbreviation" type="java.lang.String"/>
	<attribute name="name" type="java.lang.String"/>
	</class>
    <class name="Gene" extends="SequenceFeature" is-interface="true">
	<attribute name="ncbiGeneNumber" type="java.lang.String"/>
	<collection name="homologues" referenced-type="Homologue" reverse-reference="gene"/>
	<!-- The following attribute is to conform to the standard, which is
	    to cache the GO annotations for an object.
	    -->
	<collection name="goAnnotation" referenced-type="GOAnnotation"/>
	</class>

    <!-- ****************** ALLELES, STRAINS, GENOTYPES ************* -->
    <class name="Allele" extends="SequenceCollection" is-interface="true">
	<!-- Augment core class.  -->
	<attribute name="isWildType" type="java.lang.Boolean" />
	<attribute name="alleleType" type="java.lang.String" />
        <attribute name="projectCollection" type="java.lang.String" />
	<collection name="alleleAttributes" referenced-type="AlleleAttribute" />
        <attribute name="attributeString" type="java.lang.String" />
        <attribute name="inheritanceMode" type="java.lang.String" />
        <attribute name="glTransmission" type="java.lang.String" />
	<reference name="feature" referenced-type="SequenceFeature" reverse-reference="alleles" />
	<reference name="strainOfOrigin" referenced-type="Strain" />
	<collection name="genotypes" referenced-type="Genotype" reverse-reference="alleles" />
	<collection name="mutations" referenced-type="AlleleMolecularMutation" />
	<attribute name="isRecombinase" type="java.lang.Boolean" />
        <attribute name="molecularNote" type="java.lang.String" />
        <attribute name="drivenBy" type="java.lang.String" />
        <attribute name="inducedWith" type="java.lang.String" />
	<collection name="cellLines" referenced-type="CellLine" reverse-reference="alleles" />
	<collection name="mutationInvolves" referenced-type="MGIMutationInvolves" reverse-reference="mutation" />
	<collection name="expresses" referenced-type="MGIExpressesComponent" reverse-reference="allele" />
	</class>

    <class name="AlleleAttribute" is-interface="true">
	<!-- New class. Vocab with terms like "conditional ready" and "reporter". -->
	<attribute name="name" type="java.lang.String"/>
	</class>

    <class name="AlleleMolecularMutation" is-interface="true">
	<!-- New class. Vocab of molecular mutation types. -->
	<attribute name="name" type="java.lang.String"/>
	</class>

    <class name="CellLine" extends="BioEntity" is-interface="true">
	<attribute name="cellLineType" type="java.lang.String" />
	<reference name="strain" referenced-type="Strain" />
	<reference name="derivation" referenced-type="CellLineDerivation" />
	<collection name="alleles" referenced-type="Allele" reverse-reference="cellLines" />
	<collection name="genotypes" referenced-type="Genotype" reverse-reference="cellLines" />
        </class>

    <class name="CellLineDerivation" is-interface="true">
	<attribute name="name" type="java.lang.String" />
	<attribute name="vector" type="java.lang.String" />
	<attribute name="vectorType" type="java.lang.String" />
	<attribute name="derivationType" type="java.lang.String" />
	<attribute name="creator" type="java.lang.String" />
	<reference name="parentCellLine" referenced-type="CellLine" />
	<reference name="publication" referenced-type="Publication" />
        </class>

    <class name="Strain" extends="BioEntity" is-interface="true">
	<attribute name="strainType" type="java.lang.String" />
	<collection name="genotypes" referenced-type="Genotype" reverse-reference="background" />
	</class>

    <class name="Genotype" extends="BioEntity" is-interface="true">
	<!-- New class.  Make it a BioEntity (sigh) so that we can create OntologyAnnotations to them. -->
	<reference name="background" referenced-type="Strain" reverse-reference="genotypes" />
	<collection name="alleles" referenced-type="Allele" reverse-reference="genotypes" />
	<collection name="cellLines" referenced-type="CellLine" reverse-reference="genotypes" />
	<collection name="allelePairs" referenced-type="GenotypeAllelePair" reverse-reference="genotype" />
	<attribute name="zygosity" type="java.lang.String" />
	<attribute name="isConditional" type="java.lang.Boolean" />
        <attribute name="hasMutantAllele" type="java.lang.Boolean" />
	<attribute name="note" type="java.lang.String" />
	<attribute name="existsAs" type="java.lang.String" />
	<collection name="expression" referenced-type="GXDExpression" reverse-reference="genotype"/>
	</class>

    <class name="GenotypeAllelePair" is-interface="true">
	<!-- New class. Mimics GXD_AllelePair. -->
	<reference name="genotype" referenced-type="Genotype" reverse-reference="allelePairs" />
	<reference name="allele1" referenced-type="Allele" />
	<reference name="mutantCellLine1" referenced-type="CellLine" />
	<reference name="allele2" referenced-type="Allele" />
	<reference name="mutantCellLine2" referenced-type="CellLine" />
	<reference name="feature" referenced-type="SequenceFeature" />
	<attribute name="pairState" type="java.lang.String" />
        </class>

    <!-- ****************** ONTOLOGIES ****************************** -->
    <class name="GOTerm" extends="OntologyTerm" is-interface="true"> </class>
    <class name="DiseaseTerm" extends="OntologyTerm" is-interface="true"> </class>
    <class name="DOTerm" extends="DiseaseTerm" is-interface="true"> </class>    
    <class name="MPTerm" extends="OntologyTerm" is-interface="true"> </class>
    <class name="AnatomyTerm" extends="OntologyTerm" is-interface="true"> </class>
    <class name="EMAPATerm" extends="AnatomyTerm" is-interface="true"> 
        <collection name="expression" referenced-type="GXDExpression" reverse-reference="structure"/>
	<attribute name="startsAt" type="java.lang.Integer" />
	<attribute name="endsAt" type="java.lang.Integer" />
    </class>

    <!-- ****************** ANNOTATIONS ***************************** -->
    <class name="OntologyAnnotation" is-interface="true">
        <attribute name="annotationExtension" type="java.lang.String" />
	<!-- Augment core class: add collection of evidence records. This conforms
	    to the standard for GO but at the abstract level. -->
	<collection 
	    name="evidence" 
	    referenced-type="OntologyAnnotationEvidence" 
	    reverse-reference="annotation"
	    />
	</class>

    <class name="OntologyAnnotationEvidenceCode" is-interface="true">
	<!-- New class. Matches the standard GOEvidenceCode model, but as 
	    a generic.  GOEvidenceCode is derived below. 
	-->
	<attribute name="code" type="java.lang.String" />
	<attribute name="name" type="java.lang.String" />
	</class>

    <class name="OntologyAnnotationEvidence" is-interface="true">
	<!-- New class. Matches the standard GOEvidence model, but as a generic.
	     GOEvidence is derived below.
	-->
	<reference name="code" referenced-type="OntologyAnnotationEvidenceCode" />
	<collection name="publications" referenced-type="Publication" />

	<attribute name="withText" type="java.lang.String" />
	<collection name="with" referenced-type="BioEntity"/>
	<reference name="annotation" referenced-type="OntologyAnnotation" reverse-reference="evidence" />
	<!-- 
	   Standard model put the annotationExtension field in the OntologyAnnotation class.
	   It actually belongs in this class.

	-->
        <attribute name="annotationExtension" type="java.lang.String" />

	<!--
	   Date this annotation was made.
	-->
	<attribute name="annotationDate" type="java.lang.String" />

	<!--
	   Evidence for derived annotations comprises the annotations they were derived from.
	-->
	<collection name="baseAnnotations" referenced-type="OntologyAnnotation" />
        <!--
           Curator notes
        -->
        <collection name="comments" referenced-type="Comment" />
	</class>

    <!-- These specific subtypes are for compatibility with existing widgets
        and displayers, where GO annotations are specially distinguished.
    -->
    <class name="GOAnnotation"   extends="OntologyAnnotation" is-interface="true"> 
        </class>
    <class name="GOEvidence"     extends="OntologyAnnotationEvidence" is-interface="true"> 
        </class>
    <class name="GOEvidenceCode" extends="OntologyAnnotationEvidenceCode" is-interface="true"> 
        </class>

    <!-- ****************** GXD Expression ****************************** -->
    <class name="GXDExpression" is-interface="true">
        <attribute name="assayId" type="java.lang.String" />
        <attribute name="assayType" type="java.lang.String" />
        <reference name="feature" referenced-type="SequenceFeature" reverse-reference="expression" />
        <attribute name="probe" type="java.lang.String" />
        <reference name="genotype" referenced-type="Genotype" reverse-reference="expression" />
        <attribute name="sex" type="java.lang.String" />
        <attribute name="age" type="java.lang.String" />
        <attribute name="emaps" type="java.lang.String" />
        <attribute name="stage" type="java.lang.String" />
        <reference name="structure" referenced-type="EMAPATerm" reverse-reference="expression" />
        <attribute name="strength" type="java.lang.String" />
        <attribute name="detected" type="java.lang.Boolean" />
        <attribute name="pattern" type="java.lang.String" />
        <attribute name="image" type="java.lang.String" />
        <attribute name="specimenNum" type="java.lang.Integer" />
        <attribute name="note" type="java.lang.String" />
        <reference name="publication" referenced-type="Publication" reverse-reference="expression" />
        </class>


    <!-- 
    MGI Feature Relationship Classes. Each feature relationship category is flattened in the MouseMine
    data model. The abstract superclass MGIDirectedRelationship reflects the base organization of this
    concept in MGI. EXCEPT that the subject/object (organizer/participant) references can't be defined
    at this level. 
    -->
    <class name="MGIDirectedRelationship" is-interface="true">
	<!-- 
	Every relationship object also has subject/object (organizer/participant) references.
	Because the type of references varies by subclass, they are DEFINED IN THE SUBCLASSES.
	Each subtype chooses names that best suit the purpose and aid understanding.
	-->
	<attribute name="relationshipTerm" type="java.lang.String" />
	<attribute name="qualifier" type="java.lang.String" />
	<attribute name="evidenceCode" type="java.lang.String" />
	<reference name="dataSet" referenced-type="DataSet" />
        <reference name="publication" referenced-type="Publication" />
	</class>

    <class name="MGIMutationInvolves" extends="MGIDirectedRelationship"  is-interface="true"> 
	<reference name="mutation" referenced-type="Allele" reverse-reference="mutationInvolves" />
	<reference name="feature" referenced-type="SequenceFeature" reverse-reference="involvedInMutations" />
        </class>

    <class name="MGIExpressesComponent" extends="MGIDirectedRelationship"  is-interface="true"> 
	<reference name="allele" referenced-type="Allele" reverse-reference="expresses" />
	<reference name="feature" referenced-type="SequenceFeature" reverse-reference="transgenicExpressors"/>
	<!-- -->
	<attribute name="nonMouseOrganism" type="java.lang.String" />
	<attribute name="nonMouseGeneSymbol" type="java.lang.String" />
	<attribute name="nonMouseNcbiGeneId" type="java.lang.String" />
        </class>

    <class name="MGIInteractsWith" extends="MGIDirectedRelationship"  is-interface="true"> 
	<reference name="interactor" referenced-type="SequenceFeature" reverse-reference="targets" />
	<reference name="target" referenced-type="SequenceFeature" reverse-reference="targetedBy" />
	<!-- -->
	<attribute name="dataSource" type="java.lang.String" />
	<attribute name="validation" type="java.lang.String" />
	<attribute name="score" type="java.lang.Double" />
	<attribute name="algorithm" type="java.lang.String" />
	<attribute name="participantProductId" type="java.lang.String" />
	<attribute name="organizerProductId" type="java.lang.String" />
	<attribute name="otherRefs" type="java.lang.String" />
        </class>

    <class name="MGIClusterHasMember" extends="MGIDirectedRelationship"  is-interface="true"> 
	<reference name="cluster" referenced-type="ComplexClusterRegion" reverse-reference="members" />
	<reference name="member" referenced-type="SequenceFeature" reverse-reference="genomicClusters" />
        </class>

</classes>
